import os
import click
import requests

OLLAMA_API = "http://localhost:11434/api/generate"

def ask_codexium(prompt):
    response = requests.post(OLLAMA_API, json={
        "model": "mistral",
        "prompt": prompt,
        "stream": False
    })
    return response.json()["response"]

@click.command()
@click.argument('project_path', type=click.Path(exists=True))
def codexium(project_path):
    """Codexium: Auto-generate a README for your project"""
    # Scan files (you can improve this later)
    files = [f for f in os.listdir(project_path) if f.endswith(('.py', '.js', '.ts', '.go', '.java'))]

    combined_code = ""
    for file in files:
        with open(os.path.join(project_path, file), 'r') as f:
            combined_code += f"### {file} ###\n{f.read()}\n\n"

    # Ask the AI model to generate a README
    prompt = f"""
You are Codexium, a helpful documentation bot.
Generate a professional, markdown-formatted README.md file based on the following source code:

{combined_code}
"""
    readme_content = ask_codexium(prompt)

    # Save README.md
    with open(os.path.join(project_path, "README.md"), 'w') as f:
        f.write(readme_content)

    click.echo("âœ… README.md generated by Codexium!")

if __name__ == '__main__':
    codexium()